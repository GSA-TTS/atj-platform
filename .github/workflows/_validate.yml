name: Validate

on:
  workflow_call:

jobs:
  run-tests:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Read node version from `.nvmrc` file
        id: nvmrc
        shell: bash
        run: echo ::set-output name=NODE_VERSION::$(cat .nvmrc)

      - name: Install required node.js version
        uses: actions/setup-node@v4
        with:
          node-version: ${{ steps.nvmrc.outputs.NODE_VERSION }}

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        id: pnpm-install
        with:
          run_install: false

      - name: Get pnpm store directory
        id: pnpm-cache
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT

      - uses: actions/cache@v4
        name: Setup pnpm cache
        with:
          path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install

      - name: Install playwright
        run: pnpm dlx playwright@1.48.1 install --with-deps

      # While most of the test suite is self-contained, the tests for the demo
      # servers require a prod build of @atj/server.
      - name: Build
        run: pnpm build

      - name: Lint source code
        shell: bash
        run: pnpm lint

      - name: Run test suite
        shell: bash
        run: AUTH_SECRET=not-super-secret pnpm test:ci

      - name: Initialize Terraform CDK configuration
        shell: bash
        run: |
          cd infra/cdktf
          pnpm cdktf get
          pnpm build:tsc

      - name: Typecheck source code
        shell: bash
        run: pnpm typecheck

      # - name: Vitest Coverage Report
      #   if: always()
      #   uses: davelosert/vitest-coverage-report-action@v2.5.0
