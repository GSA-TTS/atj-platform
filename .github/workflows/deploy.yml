name: 'Run tests'

on:
  push:
    branches:
      - main
  workflow_dispatch:

env:
  TAG_NAME: ghcr.io/gsa-tts/tts-10x-atj-dev/doj-demo:latest

jobs:
  init-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Read node version from `.nvmrc` file
        id: nvmrc
        shell: bash
        run: echo ::set-output name=NODE_VERSION::$(cat .nvmrc)

      - name: Install required node.js version
        uses: actions/setup-node@v3
        with:
          node-version: ${{ steps.nvmrc.outputs.NODE_VERSION }}

      - name: Install pnpm
        uses: pnpm/action-setup@v2
        id: pnpm-install
        with:
          version: 8
          run_install: false
      - name: Get pnpm store directory
        id: pnpm-cache
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT

      - uses: actions/cache@v3
        name: Setup pnpm cache
        with:
          path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install

  build-image:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Build container image
        run: docker build . --platform linux/amd64 --target doj-demo --tag ${TAG_NAME}

      - name: Publish to container registry
        run: docker push ${TAG_NAME}

  deploy:
    runs-on: ubuntu-latest
    needs: [build-image, init-deploy]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Initialize Terraform CDK configuration
        run: pnpm build

      - name: Apply Terraform CDK configuration
        run: pnpm cdktf deploy
